#maybe
#alt-left/right eller ctrl

unbind C-b
set -g prefix C-s
bind -r C-s send-prefix

set -g mouse on

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

set-window-option -g automatic-rename on
set-option -g set-titles on
set -sg escape-time 0



bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
bind C-r source-file ~/.tmux.conf \; display-message "Config reloaded..."


# tmux navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
# bind -T copy-mode-vi C-\ select-pane -l

bind -n C-n if-shell "$is_vim" "send-keys C-n" "next-window"
bind -n C-p if-shell "$is_vim" "send-keys C-p" "previous-window"

bind -n C-x if-shell "$is_vim" "send-keys C-x" "kill-pane"

bind v split-window -h
bind h split-window -v
bind C-v split-window -h
#bind C-h split-window -v
bind C-s split-window -v

bind C-x kill-pane
bind x kill-pane
bind C-q kill-window
bind q kill-window
bind & kill-window

bind C-n next-window
bind C-p previous-window
bind C-c new-window
bind C-w choose-tree -Zw

bind C-d detach
bind a last-window
bind C-a last-window
bind f resize-pane -Z
bind C-f resize-pane -Z
# bind C-f command-prompt "find-window '%%'"

bind m command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind c-m command-prompt -p "send pane to:"  "join-pane -t '%%'"

#bind C-l send-keys 'C-l'
bind C-h resize-pane -L 10
bind C-j resize-pane -D 10
bind C-k resize-pane -U 10
bind C-l resize-pane -R 10

bind H swap-pane -U
bind L swap-pane -D

bind b copy-mode
bind C-b copy-mode

# Copy mode
bind -T copy-mode-vi J send-keys -X next-paragraph
bind -T copy-mode-vi K send-keys -X previous-paragraph
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line
bind -T copy-mode-vi s command-prompt -p "(search down)" "send -X search-forward \"%%%\""
bind -T copy-mode-vi S command-prompt -p "(search up)" "send -X search-backward \"%%%\""
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'


# Theme
set -g status-interval 20
set -g status-style bg=black,fg=white
# Left
set -g status-left-style bg=magenta,fg=black
set -g status-left " [#S] #[bg=black]#[fg=white] "
# Right
set -g status-right-style bg=black,fg=black
set -g status-right "#[bg=white] %H:%M #[bg=black] #[bg=green] %d-%b-%y "
# Middle
set -g window-status-format " #I:#W#F "
set -g window-status-current-format " #I:#W#F "
set -g window-status-current-style bg=blue,fg=black
set -g window-status-activity-style bg=red,fg=black
set -g window-status-separator ""
# General
set -g pane-border-style bg=default,fg=default
set -g pane-active-border-style bg=default,fg=green
set -g message-style bg=default,fg=default
set -g message-command-style bg=default,fg=default
set -g mode-style bg=red,fg=default
# set -g status-right ''

# Tmux Plugin Manager

# List of plugins
# set -g @plugin 'tmux-plugins/tpm'

# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @resurrect-save 'æ'
# set -g @resurrect-restore 'å'

# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run -b '~/.tmux/plugins/tpm/tpm'
