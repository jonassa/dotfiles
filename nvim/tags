!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/befcb888/
+	init.vim	/^nnoremap + :t-1<CR>$/;"	m
+	init.vim	/^xnoremap + :t-1<CR>$/;"	m
,	init.vim	/^noremap , g;zvzz$/;"	m
-	init.vim	/^nnoremap <silent> - :FileBeagleBufferDir<CR>$/;"	m
;	init.vim	/^noremap ; g,zvzz$/;"	m
<	init.vim	/^xnoremap < <gv$/;"	m
<BS>	init.vim	/^nnoremap <BS> <C-W>p$/;"	m
<Bar>	init.vim	/^nnoremap <Bar> za$/;"	m
<C-A>	init.vim	/^cnoremap <C-A> <Home>$/;"	m
<C-A>	init.vim	/^nnoremap <silent> <C-A> <C-^>$/;"	m
<C-B>	init.vim	/^cnoremap <C-B> <Left>$/;"	m
<C-B>	init.vim	/^inoremap <C-B> <Left>$/;"	m
<C-B>	init.vim	/^nnoremap <C-B> <C-B>zz$/;"	m
<C-C>	init.vim	/^inoremap <C-C> <Esc>$/;"	m
<C-C>	init.vim	/^nnoremap <C-C> "+yy$/;"	m
<C-C>	init.vim	/^xnoremap <C-C> "+y$/;"	m
<C-D>	init.vim	/^inoremap <C-D> <Del>$/;"	m
<C-D>	init.vim	/^nnoremap <C-D> <C-D>zz$/;"	m
<C-E>	init.vim	/^cnoremap <C-E> <End>$/;"	m
<C-E>	init.vim	/^nnoremap <C-E> zt$/;"	m
<C-F>	init.vim	/^cnoremap <C-F> <Right>$/;"	m
<C-F>	init.vim	/^inoremap <C-F> <Right>$/;"	m
<C-F>	init.vim	/^nnoremap <C-F> <C-F>zz$/;"	m
<C-H>	init.vim	/^nnoremap <silent> <C-H> :TmuxNavigateLeft<CR>$/;"	m
<C-J>	init.vim	/^nnoremap <silent> <C-J> :TmuxNavigateDown<CR>$/;"	m
<C-K>	init.vim	/^nnoremap <silent> <C-K> :TmuxNavigateUp<CR>$/;"	m
<C-L>	init.vim	/^imap <C-L> <C-X><C-L>$/;"	m
<C-L>	init.vim	/^nnoremap <silent> <C-L> :TmuxNavigateRight<CR>$/;"	m
<C-M-j>	init.vim	/^nnoremap <silent> <C-M-j> mz:m+<CR>`z$/;"	m
<C-M-k>	init.vim	/^nnoremap <silent> <C-M-k> mz:m-2<CR>`z$/;"	m
<C-Q>	init.vim	/^nnoremap <silent> <C-Q> :close<CR>$/;"	m
<C-R>	init.vim	/^nnoremap <silent> <C-R> :History:<CR>$/;"	m
<C-S>	init.vim	/^nnoremap <silent> <C-S> :up<CR>$/;"	m
<C-U>	init.vim	/^nnoremap <C-U> <C-U>zz$/;"	m
<C-W><C-I>	init.vim	/^nnoremap <C-W><C-I> <C-W>}$/;"	m
<C-X>	init.vim	/^nnoremap <silent> <C-X> :bp<Bar>bd! #<CR>$/;"	m
<C-X><C-F>	init.vim	/^imap <C-X><C-F> <plug>(fzf-complete-path)$/;"	m
<C-X><C-L>	init.vim	/^imap <C-X><C-L> <plug>(fzf-complete-line)$/;"	m
<C-Y>	init.vim	/^nnoremap <C-Y> zb$/;"	m
<C-n>	init.vim	/^map <silent> <C-n> :bn<CR>$/;"	m
<C-p>	init.vim	/^map <silent> <C-p> :bp<CR>$/;"	m
<C-s>	init.vim	/^inoremap <silent> <C-s> <Esc>:up<CR>$/;"	m
<C-v>	init.vim	/^inoremap <C-v> <C-R>"$/;"	m
<CR>	init.vim	/^inoremap <expr> <CR> complete_info()["selected"] != "-1" ? "\\<C-y>\\<CR>" : $/;"	m
<CR>	init.vim	/^nnoremap <CR> <C-]>zz$/;"	m
<F10>	init.vim	/^map <F10> :w <CR>:!python %<CR>$/;"	m
<F12>	init.vim	/^map <F12> :w <CR>:!gcc -g % -o %< && .\/%< <CR>$/;"	m
<F1>	init.vim	/^nnoremap <expr> <F1> &foldlevel ? 'zM' :'zR'$/;"	m
<F2>	init.vim	/^map <silent> <F2> :call Highlight_trailing_whitespace()<CR>$/;"	m
<F3>	init.vim	/^nnoremap <F3> :CRotate<CR>$/;"	m
<F5>	init.vim	/^nnoremap <silent> <F5> :BG<CR>$/;"	m
<M-.>	init.vim	/^cnoremap <M-.> <Up>$/;"	m
<M-.>	init.vim	/^nnoremap <M-.> :<Up>$/;"	m
<M-1>	init.vim	/^nnoremap <silent> <expr> <M-1> g:NERDTree.IsOpen() ? "\\:NERDTreeClose<CR>" : bufexists(expand('/;"	m
<M-2>	init.vim	/^inoremap <M-2> @$/;"	m
<M-2>	init.vim	/^nnoremap <silent> <M-2> :Vista!!<CR>$/;"	m
<M-3>	init.vim	/^inoremap <M-3> #$/;"	m
<M-3>	init.vim	/^nnoremap <silent> <M-3> :Vista!!<Bar>NERDTreeToggle<CR><C-W>p$/;"	m
<M-4>	init.vim	/^inoremap <M-4> \$$/;"	m
<M-5>	init.vim	/^inoremap <M-5> %$/;"	m
<M-:>	init.vim	/^cnoremap <M-:> <Down>$/;"	m
<M-BS>	init.vim	/^nnoremap <M-BS> <C-W>c$/;"	m
<M-BS>	init.vim	/^noremap! <M-BS> <C-W>$/;"	m
<M-C>	init.vim	/^nmap <M-C> :t-1<CR>gccj$/;"	m
<M-CR>	init.vim	/^inoremap <M-CR> <ESC>:s\/\\s*;*\\s*$\/;<CR>j$/;"	m
<M-CR>	init.vim	/^nnoremap <M-CR> <ESC>:s\/\\s*;*\\s*$\/;<CR>j$/;"	m
<M-D>	init.vim	/^cnoremap <M-D> <C-Right><C-W>$/;"	m
<M-Down>	init.vim	/^nnoremap <silent> <M-Down> :call MoveOrCreateWindow('j')<CR>$/;"	m
<M-I>	init.vim	/^nnoremap <M-I> <<$/;"	m
<M-I>	init.vim	/^xnoremap <M-I> <gv$/;"	m
<M-J>	init.vim	/^nnoremap <M-J> J$/;"	m
<M-K>	init.vim	/^nnoremap <silent> <M-K> :<C-u>call BreakHere()<CR>$/;"	m
<M-Left>	init.vim	/^nnoremap <silent> <M-Left> :call MoveOrCreateWindow('h')<CR>$/;"	m
<M-M>	init.vim	/^nnoremap <M-M> zr$/;"	m
<M-N>	init.vim	/^cnoremap <M-N> <C-n>$/;"	m
<M-N>	init.vim	/^nnoremap <M-N> #$/;"	m
<M-O>	init.vim	/^inoremap <M-O> <Esc>O$/;"	m
<M-O>	init.vim	/^nnoremap <silent> <M-O> :<c-u>call <SID>blankup(v:count1)<CR>$/;"	m
<M-P>	init.vim	/^cnoremap <M-P> <C-p>$/;"	m
<M-P>	init.vim	/^nmap <M-P> <Plug>yankstack_substitute_newer_paste$/;"	m
<M-Q>	init.vim	/^inoremap <M-Q> <Esc>$/;"	m
<M-Q>	init.vim	/^nnoremap <M-Q> <Nop>$/;"	m
<M-Q>	init.vim	/^nnoremap <M-Q> q$/;"	m
<M-R>	init.vim	/^imap <M-R> <Esc>l<M-r>g_$/;"	m
<M-R>	init.vim	/^nmap <M-R> <M-r>g_$/;"	m
<M-Right>	init.vim	/^nnoremap <silent> <M-Right> :call MoveOrCreateWindow('l')<CR>$/;"	m
<M-Space>	init.vim	/^nnoremap <silent> <M-Space> :JustOneSpace<CR>$/;"	m
<M-U>	init.vim	/^inoremap <M-U> <Esc>U$/;"	m
<M-U>	init.vim	/^nnoremap <M-U> <C-R>$/;"	m
<M-U>	init.vim	/^vmap <M-U> <Esc>U$/;"	m
<M-Up>	init.vim	/^nnoremap <silent> <M-Up> :call MoveOrCreateWindow('k')<CR>$/;"	m
<M-W>	init.vim	/^nmap <M-W> <M-r>iW$/;"	m
<M-a>	init.vim	/^inoremap <M-a> <Esc>A$/;"	m
<M-a>	init.vim	/^nnoremap <M-a> mz=ap`z$/;"	m
<M-b>	init.vim	/^cnoremap <M-b> <C-Left>$/;"	m
<M-b>	init.vim	/^inoremap <silent> <M-b> <Esc><C-Left>$/;"	m
<M-b>	init.vim	/^nnoremap <silent> <M-b> <C-Left>$/;"	m
<M-c>	init.vim	/^nmap <M-c> gcc$/;"	m
<M-c>	init.vim	/^xmap <M-c> gc$/;"	m
<M-d>	init.vim	/^inoremap <M-d> <C-\\><C-O>de$/;"	m
<M-d>	init.vim	/^nnoremap <silent> <M-d> dW$/;"	m
<M-e>	init.vim	/^imap <M-e> <Plug>(coc-snippets-expand)$/;"	m
<M-f>	init.vim	/^cnoremap <M-f> <C-Right>$/;"	m
<M-f>	init.vim	/^inoremap <silent> <M-f> <Esc><C-Right>$/;"	m
<M-f>	init.vim	/^nnoremap <silent> <M-f> <C-Right>$/;"	m
<M-g>	init.vim	/^nnoremap <M-g> <C-]>zz$/;"	m
<M-h>	init.vim	/^xnoremap <M-h> <gv$/;"	m
<M-i>	init.vim	/^inoremap <M-i> <Esc>I$/;"	m
<M-i>	init.vim	/^nnoremap <M-i> >>$/;"	m
<M-i>	init.vim	/^xnoremap <M-i> >gv$/;"	m
<M-j>	init.vim	/^cnoremap <M-j> <C-G>$/;"	m
<M-j>	init.vim	/^nnoremap <M-j> 4gjzz$/;"	m
<M-j>	init.vim	/^xnoremap <M-j> :m'>+<CR>`<my`>mzgv`yo`z$/;"	m
<M-k>	init.vim	/^cnoremap <M-k> <C-T>$/;"	m
<M-k>	init.vim	/^nnoremap <M-k> 4gkzz$/;"	m
<M-k>	init.vim	/^xnoremap <M-k> :m'<-2<CR>`>my`<mzgv`yo`z$/;"	m
<M-l>	init.vim	/^imap <M-l> <C-X><C-L>$/;"	m
<M-l>	init.vim	/^nnoremap <silent> <M-l> :Lines<CR>$/;"	m
<M-l>	init.vim	/^xnoremap <M-l> >gv$/;"	m
<M-m>	init.vim	/^nnoremap <M-m> zm$/;"	m
<M-n>	init.vim	/^cnoremap <M-n> <Down>$/;"	m
<M-n>	init.vim	/^inoremap <M-n> <C-N>$/;"	m
<M-n>	init.vim	/^nnoremap <M-n> *$/;"	m
<M-o>	init.vim	/^inoremap <M-o> <Esc>o$/;"	m
<M-o>	init.vim	/^nnoremap <silent> <M-o> :<c-u>call <SID>blankdown(v:count1)<CR>$/;"	m
<M-o>	init.vim	/^xnoremap <M-o> o<Esc>$/;"	m
<M-p>	init.vim	/^cnoremap <M-p> <Up>$/;"	m
<M-p>	init.vim	/^inoremap <M-p> <C-P>$/;"	m
<M-p>	init.vim	/^nmap <M-p> <Plug>yankstack_substitute_older_paste$/;"	m
<M-q>	init.vim	/^cnoremap <M-q> <C-C>$/;"	m
<M-q>	init.vim	/^inoremap <M-q> <Esc>$/;"	m
<M-q>	init.vim	/^noremap  <M-q> <Esc>$/;"	m
<M-r>	init.vim	/^nmap <M-r> <Plug>(operator-sandwich-add)$/;"	m
<M-r>	init.vim	/^xmap <M-r> <Plug>(operator-sandwich-add)$/;"	m
<M-r><M-r>	init.vim	/^nmap <M-r><M-r> <M-r><SID>line$/;"	m
<M-s>	init.vim	/^inoremap <silent> <M-s> <Esc>:up<CR>$/;"	m
<M-s>	init.vim	/^nnoremap <silent> <M-s> :up<CR>$/;"	m
<M-u>	init.vim	/^inoremap <M-u> <Esc>u$/;"	m
<M-u>	init.vim	/^nnoremap <M-u> u$/;"	m
<M-u>	init.vim	/^vmap <M-u> <Esc>u$/;"	m
<M-w>	init.vim	/^imap <M-w> <C-X><C-F>$/;"	m
<M-w>	init.vim	/^nmap <M-w> <M-r>iw$/;"	m
<M-x>	init.vim	/^nnoremap <M-x> :Commands<CR>$/;"	m
<S-Down>	init.vim	/^nnoremap <silent> <S-Down> 10<C-w>-$/;"	m
<S-Left>	init.vim	/^nnoremap <silent> <S-Left> 10<C-w><$/;"	m
<S-Right>	init.vim	/^nnoremap <silent> <S-Right> 10<C-w>>$/;"	m
<S-TAB>	init.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<S-Tab>	init.vim	/^xnoremap <S-Tab> <gv$/;"	m
<S-Up>	init.vim	/^nnoremap <silent> <S-Up> 10<C-w>+$/;"	m
<SID>line	init.vim	/^onoremap <silent> <SID>line :normal! ^vg_<CR>$/;"	m
<ScrollWheelDown>	init.vim	/^inoremap <ScrollWheelDown> <Esc>$/;"	m
<ScrollWheelUp>	init.vim	/^inoremap <ScrollWheelUp> <Esc>$/;"	m
<TAB>	init.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<Tab>	init.vim	/^xnoremap <Tab> >gv$/;"	m
<c-m-b>	init.vim	/^nnoremap <silent> <c-m-b> :SidewaysLeft<CR>$/;"	m
<c-m-f>	init.vim	/^nnoremap <silent> <c-m-f> :SidewaysRight<CR>$/;"	m
<c-space>	init.vim	/^nmap <c-space> <Plug>(coc-fix-current)$/;"	m
<c-x>?	init.vim	/^imap <c-x>? <plug>(fzf-maps-i)$/;"	m
<down>	init.vim	/^nnoremap <silent> <expr> <down>  &diff ? ']c' : ':cnext<CR>zvzz'$/;"	m
<leader>'	init.vim	/^nnoremap <silent> <leader>' :Marks<CR>$/;"	m
<leader>1	init.vim	/^nnoremap <silent> <leader>1 :1tabnext<CR>$/;"	m
<leader>2	init.vim	/^nnoremap <silent> <leader>2 :2tabnext<CR>$/;"	m
<leader>3	init.vim	/^nnoremap <silent> <leader>3 :3tabnext<CR>$/;"	m
<leader>4	init.vim	/^nnoremap <silent> <leader>4 :4tabnext<CR>$/;"	m
<leader>:	init.vim	/^nnoremap <silent> <leader>: :Commands<CR>$/;"	m
<leader><Tab>	init.vim	/^nnoremap <silent> <leader><Tab> :Buffers<CR>$/;"	m
<leader><leader>	init.vim	/^nnoremap <silent> <leader><leader> :Vista finder<CR>$/;"	m
<leader>?	init.vim	/^nmap <leader>? <plug>(fzf-maps-n)$/;"	m
<leader>?	init.vim	/^omap <leader>? <plug>(fzf-maps-o)$/;"	m
<leader>?	init.vim	/^xmap <leader>? <plug>(fzf-maps-x)$/;"	m
<leader>C	init.vim	/^nnoremap <silent> <leader>C :Directories<CR>$/;"	m
<leader>F	init.vim	/^nnoremap <silent> <leader>F :Files ~<CR>$/;"	m
<leader>Q	init.vim	/^nnoremap <silent> <leader>Q :qa!<CR>$/;"	m
<leader>a	init.vim	/^nnoremap <leader>a :Ag<Space>$/;"	m
<leader>c	init.vim	/^nnoremap <silent> <leader>c :Colors<CR>$/;"	m
<leader>d	init.vim	/^nnoremap <silent> <expr> <leader>d &diff ? ':diffoff!<CR>:q<CR>' : ':Gdiffsplit<CR>'$/;"	m
<leader>e	init.vim	/^nnoremap <silent> <leader>e :e!<CR>$/;"	m
<leader>f	init.vim	/^nnoremap <silent> <leader>f :Files<CR>$/;"	m
<leader>g	init.vim	/^nnoremap <silent> <leader>g :GFiles<CR>$/;"	m
<leader>h	init.vim	/^nnoremap <silent> <leader>h :Helptags<CR>$/;"	m
<leader>lc	init.vim	/^nnoremap <silent> <leader>lc  :<C-u>CocCommand<CR>$/;"	m
<leader>ll	init.vim	/^nnoremap <silent> <leader>ll  :<C-u>CocList<CR>$/;"	m
<leader>lo	init.vim	/^nnoremap <silent> <leader>lo  :<C-u>CocList outline<CR>$/;"	m
<leader>lr	init.vim	/^nnoremap <leader>lr <Plug>(coc-rename)$/;"	m
<leader>ls	init.vim	/^nnoremap <silent> <leader>ls  :<C-u>CocList -I symbols<CR>$/;"	m
<leader>n	init.vim	/^nnoremap <silent> <leader>n :enew<CR>$/;"	m
<leader>o	init.vim	/^nnoremap <leader>o :Locate<Space>$/;"	m
<leader>q	init.vim	/^nnoremap <silent> <leader>q :qa!<CR>$/;"	m
<leader>r	init.vim	/^nnoremap <leader>r :R<CR> " Requires shebang and executable (run file as script)$/;"	m
<leader>r	init.vim	/^xnoremap <leader>r :w !python<CR>$/;"	m
<leader>s	init.vim	/^nnoremap <silent> <leader>s :up<CR>$/;"	m
<leader>v	init.vim	/^nnoremap <silent> <leader>v :e $MYVIMRC<CR>$/;"	m
<leader>w	init.vim	/^nnoremap <silent> <leader>w :x!<CR>$/;"	m
<left>	init.vim	/^nnoremap <silent> <expr> <left>  &diff ? 'do' : ':cpf<CR>zvzz'$/;"	m
<left>	init.vim	/^nnoremap <silent> <left>  :cpf<CR>zvzz$/;"	m
<m-B>	init.vim	/^nnoremap <m-B> daWBPB$/;"	m
<m-F>	init.vim	/^nnoremap <m-F> daWWPB$/;"	m
<m-e>	init.vim	/^nnoremap <m-e> :Snippets<CR>$/;"	m
<m-h>	init.vim	/^nnoremap <silent> <m-h> :call <SID>show_documentation()<CR>$/;"	m
<m-v>	init.vim	/^nnoremap <m-v> ^vg_$/;"	m
<m-y>	init.vim	/^nnoremap <m-y> ^y\$$/;"	m
<right>	init.vim	/^nnoremap <silent> <expr> <right> &diff ? 'dp' : ':cnf<CR>zvzz'$/;"	m
<right>	init.vim	/^nnoremap <silent> <right> :cnf<CR>zvzz$/;"	m
<up>	init.vim	/^nnoremap <silent> <expr> <up>    &diff ? '[c' : ':cprev<CR>zvzz'$/;"	m
>	init.vim	/^xnoremap > >gv$/;"	m
A	init.vim	/^xnoremap <expr> A mode() == '<C-V>' ? 'A' : '<C-V>$A'$/;"	m
Ag	init.vim	/^command! -bang -nargs=* Ag call fzf#vim#ag$/;"	c
BG	init.vim	/^command! BG call s:BG()$/;"	c
BreakHere	init.vim	/^function! BreakHere()$/;"	f
BufOnly	init.vim	/^command! BufOnly silent! execute "up|%bd|e#|bd#"$/;"	c
Buffers	init.vim	/^command! -bang -nargs=? -complete=buffer Buffers$/;"	c
CRotate	init.vim	/^command! CRotate call CRotate()$/;"	c
CRotate	init.vim	/^function! CRotate()$/;"	f
Clip	init.vim	/^command! -nargs=1 Clip let @+=@<args>$/;"	c
Directories	init.vim	/^command! -nargs=* -complete=dir Directories call fzf#run(fzf#wrap($/;"	c
F	init.vim	/^map F <Plug>Sneak_F$/;"	m
Files	init.vim	/^command! -bang -nargs=? -complete=dir Files$/;"	c
Filter	init.vim	/^command! -nargs=? Filter let @x='' | execute 'g\/<args>\/y X' | enew | setlocal bt=nofile | put!/;"	c
Format	init.vim	/^command! -nargs=0 Format :call CocAction('format')$/;"	c
G	init.vim	/^nnoremap G Gzz$/;"	m
Grep	init.vim	/^command! -nargs=? -complete=file_in_path Grep silent grep! <args>$/;"	c
H	init.vim	/^noremap H ^$/;"	m
Header	init.vim	/^command! Header call Header()$/;"	c
Header	init.vim	/^function Header()$/;"	f
Highlight_trailing_whitespace	init.vim	/^function! Highlight_trailing_whitespace()$/;"	f
I	init.vim	/^xnoremap <expr> I mode() == '<C-V>' ? 'I' : '<C-V>^I'$/;"	m
J	init.vim	/^nnoremap <silent> J :<C-u>execute "keepjumps norm! " . v:count1 . "}"<CR>$/;"	m
J	init.vim	/^onoremap J }$/;"	m
J	init.vim	/^xnoremap <silent> J :<C-u>keepjumps normal! gv}<CR>$/;"	m
JustOneSpace	init.vim	/^command! JustOneSpace call JustOneSpace()$/;"	c
JustOneSpace	init.vim	/^function! JustOneSpace()$/;"	f
K	init.vim	/^nnoremap <silent> K :<C-u>execute "keepjumps norm! " . v:count1 . "{"<CR>$/;"	m
K	init.vim	/^onoremap K {$/;"	m
K	init.vim	/^xnoremap <silent> K :<C-u>keepjumps normal! gv{<CR>$/;"	m
L	init.vim	/^noremap L \$$/;"	m
M	init.vim	/^nnoremap M zz$/;"	m
MoveOrCreateWindow	init.vim	/^function! MoveOrCreateWindow(key) abort$/;"	f
P	init.vim	/^xnoremap P :t-1<CR>$/;"	m
Q	init.vim	/^nnoremap Q `.zz$/;"	m
Q	init.vim	/^xnoremap Q :s\/\\n\\{3,\\}\/\\r\\r<CR>$/;"	m
QuickfixKeys	init.vim	/^aug QuickfixKeys$/;"	a
R	init.vim	/^command! -nargs=* R up|!% <args>$/;"	c
R	init.vim	/^xnoremap R :g\/^$\/d<CR>$/;"	m
Redir	init.vim	/^command! -nargs=+ -complete=command Redir call Redir(<q-args>)$/;"	c
Redir	init.vim	/^function! Redir(cmd)$/;"	f
S	init.vim	/^nnoremap <silent> S :Lines<CR>$/;"	m
S	init.vim	/^nnoremap S ?$/;"	m
S	init.vim	/^xnoremap S ?$/;"	m
Scratch	init.vim	/^function! Scratch()$/;"	f
SetColors	init.vim	/^function! SetColors()$/;"	f
StripTrailingWhitespace	init.vim	/^function! StripTrailingWhitespace()$/;"	f
T	init.vim	/^map T <Plug>Sneak_T$/;"	m
ToggleWorkingDir	init.vim	/^function! ToggleWorkingDir()$/;"	f
U	init.vim	/^nnoremap U <C-R>$/;"	m
VV	init.vim	/^nnoremap VV viW$/;"	m
Y	init.vim	/^map Y y\$$/;"	m
\\	init.vim	/^noremap \\ @:$/;"	m
af	init.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
af	init.vim	/^xmap af <Plug>(coc-funcobj-a)$/;"	m
cP	init.vim	/^nnoremap cP "1P$/;"	m
cP	init.vim	/^nnoremap cP <esc>"+P$/;"	m
cd	init.vim	/^nnoremap cd :Directories<CR>$/;"	m
cd	init.vim	/^nnoremap cd \/\\d\\+<CR>gnc$/;"	m
ch	init.vim	/^nnoremap ch c^$/;"	m
co	init.vim	/^nmap <silent> co <Plug>(qf_qf_toggle)$/;"	m
cp	init.vim	/^nnoremap cp "1p$/;"	m
cp	init.vim	/^nnoremap cp <esc>"+p$/;"	m
cs	init.vim	/^nmap cs <Plug>(operator-sandwich-replace)<Plug>(operator-sandwich-release-count)<Plug>(textobj-s/;"	m
css	init.vim	/^nmap css <Plug>(operator-sandwich-replace)<Plug>(operator-sandwich-release-count)<Plug>(textobj-/;"	m
cu	init.vim	/^nnoremap cu :<C-U>call ToggleWorkingDir()<CR>$/;"	m
cv	init.vim	/^nmap cv civ$/;"	m
dh	init.vim	/^nnoremap dh d^$/;"	m
do	init.vim	/^nnoremap <silent> <expr> do &diff ? 'do' : ':Explore<CR>'$/;"	m
dp	init.vim	/^nnoremap <silent> <expr> dp &diff ? 'dp' : ':t.<CR>'$/;"	m
ds	init.vim	/^nmap ds <Plug>(operator-sandwich-delete)<Plug>(operator-sandwich-release-count)<Plug>(textobj-sa/;"	m
dss	init.vim	/^nmap dss <Plug>(operator-sandwich-delete)<Plug>(operator-sandwich-release-count)<Plug>(textobj-s/;"	m
dv	init.vim	/^nmap dv div$/;"	m
f	init.vim	/^map f <Plug>Sneak_f$/;"	m
g/	init.vim	/^nnoremap g\/ :g\/\/<CR>$/;"	m
g:AutoPairsMapCh	init.vim	/^let g:AutoPairsMapCh = 0$/;"	v
g:AutoPairsMoveCharacter	init.vim	/^let g:AutoPairsMoveCharacter = ''$/;"	v
g:AutoPairsShortcutBackInsert	init.vim	/^let g:AutoPairsShortcutBackInsert = ''$/;"	v
g:AutoPairsShortcutFastWrap	init.vim	/^let g:AutoPairsShortcutFastWrap = ''$/;"	v
g:AutoPairsShortcutJump	init.vim	/^let g:AutoPairsShortcutJump = ''$/;"	v
g:AutoPairsShortcutToggle	init.vim	/^let g:AutoPairsShortcutToggle = ''$/;"	v
g:NERDTreeAutoDeleteBuffer	init.vim	/^let g:NERDTreeAutoDeleteBuffer = 1$/;"	v
g:NERDTreeChDirMode	init.vim	/^let g:NERDTreeChDirMode = 2$/;"	v
g:NERDTreeMinimalUI	init.vim	/^let g:NERDTreeMinimalUI = 1$/;"	v
g:NERDTreeShowFiles	init.vim	/^let g:NERDTreeShowFiles = 1$/;"	v
g:ale_linters	init.vim	/^let g:ale_linters = {$/;"	v
g:bullets_enabled_file_types	init.vim	/^let g:bullets_enabled_file_types = [$/;"	v
g:coc_snippet_next	init.vim	/^let g:coc_snippet_next = '<m-f>'$/;"	v
g:coc_snippet_prev	init.vim	/^let g:coc_snippet_prev = '<m-b>'$/;"	v
g:dark	init.vim	/^let g:dark='palenight'$/;"	v
g:easy_align_delimiters	init.vim	/^let g:easy_align_delimiters = {$/;"	v
g:fallback	init.vim	/^let g:fallback='gruvbox'$/;"	v
g:favorite_colors	init.vim	/^let g:favorite_colors = [$/;"	v
g:filebeagle_suppress_keymaps	init.vim	/^let g:filebeagle_suppress_keymaps = 1$/;"	v
g:fzf_buffers_jump	init.vim	/^let g:fzf_buffers_jump = 1$/;"	v
g:fzf_colors	init.vim	/^let g:fzf_colors =$/;"	v
g:fzf_history_dir	init.vim	/^let g:fzf_history_dir = '~\/.local\/share\/fzf-history'$/;"	v
g:fzf_layout	init.vim	/^let g:fzf_layout = { 'down': '~40%' }$/;"	v
g:fzf_nvim_statusline	init.vim	/^let g:fzf_nvim_statusline = 0$/;"	v
g:gruvbox_contrast_dark	init.vim	/^let g:gruvbox_contrast_dark = 'hard'$/;"	v
g:gruvbox_improved_strings	init.vim	/^let g:gruvbox_improved_strings = 1$/;"	v
g:gruvbox_improved_warnings	init.vim	/^let g:gruvbox_improved_warnings = 1$/;"	v
g:highlight_trailing	init.vim	/^        let g:highlight_trailing = 0$/;"	v
g:highlight_trailing	init.vim	/^        let g:highlight_trailing = 1$/;"	v
g:highlight_trailing	init.vim	/^let g:highlight_trailing = 0$/;"	v
g:isRecording	init.vim	/^let g:isRecording = get(g:, 'isRecording', 0)$/;"	v
g:light	init.vim	/^let g:light='tempus_dawn'$/;"	v
g:mapleader	init.vim	/^let g:mapleader=" "$/;"	v
g:markdown_enable_spell_checking	init.vim	/^let g:markdown_enable_spell_checking = 0$/;"	v
g:netrw_banner	init.vim	/^let g:netrw_banner = 0$/;"	v
g:netrw_liststyle	init.vim	/^let g:netrw_liststyle = 3$/;"	v
g:netrw_winsize	init.vim	/^let g:netrw_winsize = 25$/;"	v
g:nord_comment_brightness	init.vim	/^let g:nord_comment_brightness = 20$/;"	v
g:operator_sandwich_no_default_key_mappings	init.vim	/^let g:operator_sandwich_no_default_key_mappings = 1$/;"	v
g:project_dir	init.vim	/^        let g:project_dir=getcwd()$/;"	v
g:qf_mapping_ack_style	init.vim	/^let g:qf_mapping_ack_style = 1$/;"	v
g:qf_max_height	init.vim	/^let g:qf_max_height = 15$/;"	v
g:sandwich#recipes	init.vim	/^let g:sandwich#recipes += [$/;"	v
g:sandwich#recipes	init.vim	/^let g:sandwich#recipes = deepcopy(g:sandwich#default_recipes)$/;"	v
g:sandwich_no_default_key_mappings	init.vim	/^let g:sandwich_no_default_key_mappings = 1$/;"	v
g:session_dir	init.vim	/^let g:session_dir = '~\/.vim\/sessions'$/;"	v
g:sneak#s_next	init.vim	/^let g:sneak#s_next = 1$/;"	v
g:sneak#use_ic_scs	init.vim	/^let g:sneak#use_ic_scs = 1$/;"	v
g:splitjoin_join_mapping	init.vim	/^let g:splitjoin_join_mapping = '<m-J>'$/;"	v
g:splitjoin_split_mapping	init.vim	/^let g:splitjoin_split_mapping = '<m-K>'$/;"	v
g:targets_pairs	init.vim	/^let g:targets_pairs = '()b {}B []r <>'$/;"	v
g:targets_quotes	init.vim	/^let g:targets_quotes = '"d ''q `'$/;"	v
g:textobj_sandwich_no_default_key_mappings	init.vim	/^let g:textobj_sandwich_no_default_key_mappings = 1$/;"	v
g:theme	init.vim	/^            let g:theme=g:dark$/;"	v
g:theme	init.vim	/^            let g:theme=g:light$/;"	v
g:theme	init.vim	/^        let g:theme=$VIM_COLORS$/;"	v
g:theme	init.vim	/^        let g:theme=g:fallback$/;"	v
g:theme	init.vim	/^        let g:theme=g:light$/;"	v
g:tmux_navigator_no_mappings	init.vim	/^let g:tmux_navigator_no_mappings = 1$/;"	v
g:vem_tabline_multiwindow_mode	init.vim	/^let g:vem_tabline_multiwindow_mode = 0$/;"	v
g:vem_tabline_show	init.vim	/^let g:vem_tabline_show = 2$/;"	v
g:vista#renderer#enable_icon	init.vim	/^let g:vista#renderer#enable_icon = 0$/;"	v
g:vista_default_executive	init.vim	/^let g:vista_default_executive = 'ctags'$/;"	v
g:vista_executive_for	init.vim	/^let g:vista_executive_for = {$/;"	v
g:vista_fzf_preview	init.vim	/^let g:vista_fzf_preview = ['right:50%']$/;"	v
g:vista_icon_indent	init.vim	/^let g:vista_icon_indent = [" » ", "\\t"]$/;"	v
g:vista_stay_on_open	init.vim	/^let g:vista_stay_on_open = 0$/;"	v
g:yankstack_map_keys	init.vim	/^let g:yankstack_map_keys = 0$/;"	v
g:yankstack_yank_keys	init.vim	/^let g:yankstack_yank_keys = ['y', 'Y', 'd', 'D']$/;"	v
g<Space>	init.vim	/^nnoremap g<Space> a<Space><Esc>$/;"	m
g=	init.vim	/^nnoremap g= =ap$/;"	m
gB	init.vim	/^nnoremap gB :ls!<CR>:b<Space>$/;"	m
gQ	init.vim	/^nnoremap gQ <Nop>$/;"	m
gV	init.vim	/^nnoremap gV `[v`]$/;"	m
ga	init.vim	/^nmap ga <Plug>(EasyAlign)$/;"	m
ga	init.vim	/^xmap ga <Plug>(EasyAlign)$/;"	m
gb	init.vim	/^map gb %$/;"	m
gd	init.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gh	init.vim	/^nnoremap <silent> gh :Header<CR>$/;"	m
gh	init.vim	/^noremap gh H$/;"	m
gj	init.vim	/^nmap gj ]]$/;"	m
gk	init.vim	/^nmap gk [[$/;"	m
gl	init.vim	/^nnoremap <silent> gl :Lines<CR>$/;"	m
gl	init.vim	/^noremap gl L$/;"	m
gm	init.vim	/^noremap gm M$/;"	m
gr	init.vim	/^nnoremap gr :%s\/\\<<c-r><c-w>\\>\/$/;"	m
gr	init.vim	/^xnoremap gr y:%s\/\\<<c-r>"\\>\/$/;"	m
gs	init.vim	/^nnoremap gs :%s\/$/;"	m
gs	init.vim	/^xnoremap gs :s\/$/;"	m
gt	init.vim	/^nmap <silent> gt <Plug>(coc-type-definition)$/;"	m
gw	init.vim	/^nnoremap gw :ArgWrap<CR>$/;"	m
gæ	init.vim	/^nnoremap <silent> gæ :ALEDetail<CR>$/;"	m
if	init.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
if	init.vim	/^xmap if <Plug>(coc-funcobj-i)$/;"	m
j	init.vim	/^noremap <silent> j gj$/;"	m
j	init.vim	/^xnoremap <expr> j mode() ==# 'v' ? 'gj' : 'j'$/;"	m
k	init.vim	/^noremap <silent> k gk$/;"	m
k	init.vim	/^xnoremap <expr> k mode() ==# 'v' ? 'gk' : 'k'$/;"	m
mv	init.vim	/^nnoremap mv :Rename<Space>$/;"	m
q	init.vim	/^nnoremap q ``$/;"	m
q	init.vim	/^xnoremap q o<Esc>$/;"	m
s	init.vim	/^nnoremap s \/$/;"	m
s	init.vim	/^xnoremap s \/$/;"	m
s:BG	init.vim	/^function! s:BG()$/;"	f
s:blankdown	init.vim	/^function! s:blankdown(count) abort$/;"	f
s:blankup	init.vim	/^function! s:blankup(count) abort$/;"	f
s:check_back_space	init.vim	/^function! s:check_back_space() abort$/;"	f
s:show_documentation	init.vim	/^function! s:show_documentation()$/;"	f
t	init.vim	/^map t <Plug>Sneak_t$/;"	m
t	init.vim	/^nnoremap <silent> t :Tags<CR>$/;"	m
vD	init.vim	/^nnoremap vD "vD$/;"	m
vP	init.vim	/^nnoremap vP "vP$/;"	m
vV	init.vim	/^nnoremap vV viW$/;"	m
vY	init.vim	/^nnoremap vY "vY$/;"	m
vd	init.vim	/^nnoremap vd "vd$/;"	m
vdp	init.vim	/^nnoremap vdp "vdap$/;"	m
vimrc	init.vim	/^aug vimrc$/;"	a
vm	init.vim	/^nnoremap vm :Marks<CR>$/;"	m
vo	init.vim	/^nnoremap vo <C-W>o$/;"	m
vp	init.vim	/^nnoremap vp "vp$/;"	m
vv	init.vim	/^nnoremap vv viw$/;"	m
vy	init.vim	/^nnoremap vy "vy$/;"	m
w!!	init.vim	/^cmap w!! SudoWrite$/;"	m
yP	init.vim	/^nnoremap yP "0P$/;"	m
yh	init.vim	/^nnoremap yh y^$/;"	m
yp	init.vim	/^nnoremap yp "0p$/;"	m
zd	init.vim	/^nnoremap zd "Zdd$/;"	m
zp	init.vim	/^nnoremap zp "zp:let @z=''<CR>$/;"	m
zx	init.vim	/^nnoremap zx :pclose<CR>$/;"	m
}	init.vim	/^noremap } \$$/;"	m
±	init.vim	/^nnoremap ± <C-A>$/;"	m
¿	init.vim	/^nnoremap ¿ <C-X>$/;"	m
Å	init.vim	/^nnoremap Å @q$/;"	m
Æ	init.vim	/^nnoremap <silent> Æ :ALEPreviousWrap<CR>$/;"	m
å	init.vim	/^nnoremap <expr> <silent> å g:isRecording ? 'q:let g:isRecording=0<CR>' : 'qq:let g:isRecording=/;"	m
æ	init.vim	/^nnoremap <silent> æ :ALENextWrap<CR>$/;"	m
ø	init.vim	/^noremap ø :$/;"	m
ø	init.vim	/^noremap ø \$$/;"	m
đ	init.vim	/^nmap đ <C-F>$/;"	m
œ	init.vim	/^nnoremap œ <C-O>$/;"	m
”	init.vim	/^nmap ” <C-B>$/;"	m
→	init.vim	/^nnoremap → <C-I>$/;"	m
